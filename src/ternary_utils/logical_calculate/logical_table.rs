///*三进制逻辑门查找表声明**
///*2025/5/29**
///CTLLO
///  平衡三进制摩根定律及逻辑门转换图
///        TOR  <------->  TNOR
///         ^               ^
///         |               |
///         |               |
///         v               v
///       TNAND <------->  TAND


// **非门(TNEG) 逻辑表**
pub const TNEG:[u8; 3]= [0, 2, 1];
// **与门(TAND)逻辑表 有T出T、双1出1、其余为0 **
pub const TAND:[[u8; 3];3]= [
    [0, 0, 2],
    [0, 1, 2],
    [2, 2, 2],
];
// **或门(TOR)逻辑表 有1出1、双T出T、其余为0 **
pub const TOR:[[u8; 3];3]= [
    [0, 1, 0],
    [1, 1, 1],
    [0, 1, 2],
];
// **与非门(TAND)逻辑表 有T出1、双1出T、其余为0 **
pub const TNAND:[[u8; 3];3]= [
    [0, 0, 1],
    [0, 2, 1],
    [1, 1, 1],
];
// **或非门(TNOR)逻辑表 有1出T、双T出1、其余为0 **
pub const TNOR:[[u8; 3];3]= [
    [0, 2, 0],
    [2, 2, 2],
    [0, 2, 1],
];


// **加和(TSUM) 逻辑表**
pub const TSUM:[[u8; 3];3]= [
    [0, 1, 2],
    [1, 2, 0],
    [2, 0, 1],
];
// **共识(TCONS) 逻辑表**
pub const TCONS:[[u8; 3];3]= [
    [0, 0, 0],
    [0, 1, 0],
    [0, 0, 2],
];
// **调和(TANY) 逻辑表**
pub const TANY:[[u8; 3];3]= [
    [0, 1, 2],
    [1, 1, 0],
    [2, 0, 2],
];

// **全加器和(TFULLSUM) 逻辑表**
pub const TFULLSUM:[[[u8; 3];3];3] = [
    [
        [0, 1, 2],
        [1, 2, 0],
        [2, 0, 1],
    ],
    [
        [1, 2, 0],
        [2, 0, 1],
        [0, 1, 2],
    ],
    [
        [2, 0, 1],
        [0, 1, 2],
        [1, 2, 0],
    ],
];
// **全加器进位(TFULLCONS) 逻辑表**
pub const TFULLCONS:[[[u8; 3];3];3] = [
    [
        [0, 0, 0],
        [0, 1, 0],
        [0, 0, 2],
    ],
    [
        [0, 1, 0],
        [1, 1, 0],
        [0, 0, 0],
    ],
    [
        [0, 0, 2],
        [0, 0, 0],
        [2, 0, 2],
    ],
];
